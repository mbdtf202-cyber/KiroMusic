version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kiromusic-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - CORS_ORIGIN=http://localhost:3000
    env_file:
      - .env
    volumes:
      - ./backend/src:/app/backend/src
      - backend_node_modules:/app/backend/node_modules
    restart: unless-stopped
    networks:
      - kiromusic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: kiromusic-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:3001/api
      - VITE_CHAIN_ID=84532
      - VITE_NETWORK_NAME=base-sepolia
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - frontend_node_modules:/app/node_modules
    restart: unless-stopped
    networks:
      - kiromusic-network
    depends_on:
      - backend

  # MongoDB (optional, for future use)
  mongodb:
    image: mongo:7
    container_name: kiromusic-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=kiromusic
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - kiromusic-network

  # Redis (optional, for caching)
  redis:
    image: redis:7-alpine
    container_name: kiromusic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - kiromusic-network
    command: redis-server --appendonly yes

volumes:
  backend_node_modules:
  frontend_node_modules:
  mongodb_data:
  redis_data:

networks:
  kiromusic-network:
    driver: bridge
